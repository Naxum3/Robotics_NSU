Список добавляемых файлов в коммит:
git diff --cached --name-only

Для старта рафического окна
source /opt/ros/humble/setup.bash
ros2 run turtlesim turtlesim_node

Для старта управления
source /opt/ros/humble/setup.bash
ros2 run turtlesim turtle_teleop_key

Задать ID для моей черепахи
export ROS_DOMAIN_ID=101

Установка и настройка среды ROS:
https://docs.ros.org/en/humble/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.html

Создание пакета ROS:
https://docs.ros.org/en/humble/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.html
https://docs.ros.org/en/humble/Tutorials/Beginner-Client-Libraries/Creating-Your-First-ROS2-Package.html

Узлы ROS:
https://docs.ros.org/en/humble/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-ROS2-Nodes.html

nodes
ros2 node list
ros2 node info
remapping
ros2 run turtlesim turtlesim_node --ros-args --remap __node:=my_turtle

topics
https://docs.ros.org/en/humble/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics.html#ros2-topic-echo

Службы и параметры:
https://docs.ros.org/en/humble/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.html
https://docs.ros.org/en/humble/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Parameters/Understanding-ROS2-Parameters.html

Очистить:
ros2 service call /clear std_srvs/srv/Empty

Спавн черепахи:
ros2 service call /spawn turtlesim/srv/Spawn "{x: 2, y: 2, theta: 0.2, name: ''}"

Список парамтеров:
ros2 param list

Тип и значение параметра:
ros2 param get <node_name> <parameter_name>

Изменить параметр:
ros2 param set <node_name> <parameter_name> <value>

Посмотреть все параметры
ros2 param dump /turtlesim

Загрузить параметры из дампа:
ros2 param load <node_name> <parameter_file>

Запустить узел с параметрами из файла:
ros2 run <package_name> <executable_name> --ros-args --params-file <file_name>

Использование rqt_console и roslaunch:
https://docs.ros.org/en/humble/Tutorials/Beginner-CLI-Tools/Using-Rqt-Console/Using-Rqt-Console.html

https://docs.ros.org/en/humble/Tutorials/Intermediate/Launch/Creating-Launch-Files.html

Запустить журнал сообщений:
ros2 run rqt_console rqt_console
ros2 run turtlesim turtlesim_node --ros-args --log-level WARN

Запустить лонч:
ros2 launch <package_name> <launch_file_name>
ros2 launch three_turtles.launch

Управлять первой черепахой в 2.8:
ros2 run turtlesim turtle_teleop_key --ros_args -r __ns:=/turtlesim1

Создание ROS msg и srv:
https://github.com/colcon/colcon-ed
https://docs.ros.org/en/humble/Tutorials/Beginner-Client-Libraries/Custom-ROS2-Interfaces.html

Установка colcon edit:
sudo apt install python3-pip
pip install colcon-ed

sudo apt-get install vim

colcon edit <package_name> <file_name>

Написание Издателя и Подписчика:
https://docs.ros.org/en/humble/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.html

Сборка:
cd ~/ros2_ws
colcon build --packages-select text_to_cmd_vel
ros2 run turtlesim turtlesim_node
ros2 run text_to_cmd_vel text_to_cmd_vel
ros2 topic pub --once cmd_text std_msgs/msg/String "{data: "move_forward"}"
ros2 topic pub --once cmd_text std_msgs/msg/String "{data: "turn_right"}"


3 Module
#1
https://docs.ros.org/en/humble/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.html#write-the-client-node

colcon build --packages-select service_full_name
ros2 run service_full_name service
ros2 run service_full_name client Zubenko Mikhail Petrovich

#2
Actions:
https://docs.ros.org/en/humble/Concepts/Basic/About-Actions.html
https://docs.ros.org/en/humble/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Actions/Understanding-ROS2-Actions.html
https://docs.ros.org/en/humble/Tutorials/Intermediate/Creating-an-Action.html
https://docs.ros.org/en/humble/Tutorials/Intermediate/Writing-an-Action-Server-Client/Py.html

ros2 pkg create --build-type ament_python action_turtle_commands
ros2 pkg create turtle_action
colcon build --packages-select action_turtle_commands turtle_action

ros2 run turtlesim turtlesim_node
ros2 run action_turtle_commands server
ros2 run action_turtle_commands client

#3
Recording and playing back data:
https://docs.ros.org/en/humble/Tutorials/Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-Playing-Back-Data.html

ros2 run turtlesim turtlesim_node
ros2 run turtlesim turtle_teleop_key

для записи
cd bag_files/
ros2 bag record -o turtle_cmd_vel.mcap turtle1/cmd_vel

для проигрывания
ros2 topic echo /turtle1/pose > pose_speed_x1.yaml
cd bag_files/
ros2 bag play turtle_cmd_vel.mcap 
ros2 topic echo /turtle1/pose > pose_speed_x2.yaml
ros2 bag play turtle_cmd_vel.mcap -r 2

#4
ros2 doctor:
https://docs.ros.org/en/humble/Tutorials/Beginner-Client-Libraries/Getting-Started-With-Ros2doctor.html

#5
ros2 pkg create --build-type ament_python move_to_goal

colcon build --packages-select move_to_goal

ros2 run turtlesim turtlesim_node

ros2 run move_to_goal move_to_goal 1.0 1.0 90.0
ros2 run move_to_goal move_to_goal 7.0 2.5 45.0
ros2 run move_to_goal move_to_goal 7.0 7.0 0.0
ros2 run move_to_goal move_to_goal 1.0 1.0 90.0

4 Module
tf2:
https://docs.ros.org/en/humble/Tutorials/Intermediate/Tf2/Tf2-Main.html

#1
Введение в tf2:
https://docs.ros.org/en/humble/Tutorials/Intermediate/Tf2/Introduction-To-Tf2.html
ros2 launch turtle_tf2_py turtle_tf2_demo.launch.py
ros2 run turtlesim turtle_teleop_key
ros2 run tf2_tools view_frames
ros2 run tf2_ros tf2_echo turtle2 turtle1

rviz:
ros2 run rviz2 rviz2 -d $(ros2 pkg prefix --share turtle_tf2_py)/rviz/turtle_rviz.rviz

ros2 run tf2_ros static_transform_publisher --x x --y y --z z --yaw yaw --pitch pitch --roll roll --frame-id frame_id --child-frame-id child_frame_id
ros2 run tf2_ros static_transform_publisher --x x --y y --z z --qx qx --qy qy --qz qz --qw qw --frame-id frame_id --child-frame-id child_frame_id

#2
https://docs.ros.org/en/humble/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.html
rosdep install -i --from-path src --rosdistro humble -y
colcon build --packages-select learning_tf2_py

ros2 launch learning_tf2_py turtle_tf2_dynamic_frame_demo.launch.py direction_of_rotation:=-1

https://docs.ros.org/en/humble/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py.html
https://docs.ros.org/en/humble/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py.html
https://docs.ros.org/en/humble/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.html

#3
https://docs.ros.org/en/humble/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Py.html
https://docs.ros.org/en/humble/Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Py.html

ros2 launch learning_tf2_py turtle_tf2_demo.launch.py

5 Module
#1
http://wiki.ros.org/urdf/XML/link
https://navigation.ros.org/setup_guides/transformation/setup_transforms.html
https://navigation.ros.org/setup_guides/urdf/setup_urdf.html

colcon build --symlink-install --packages-select chair_robot
ros2 launch chair_robot robot_display.launch

https://docs.ros.org/en/humble/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.html
https://docs.ros.org/en/humble/Tutorials/Intermediate/URDF/Building-a-Movable-Robot-Model-with-URDF.html
type="continuous" - любой угол (типа колеса)
type="revolute" - с ограничениями на угол
type="prismatic" - перемещение в одном измерении
type="planar" - перемещение в 2-х измерениях (плоскости)
type="floating" - перемещение в 3-х измерениях (нет ограничений)
https://docs.ros.org/en/humble/Tutorials/Intermediate/URDF/Adding-Physical-and-Collision-Properties-to-a-URDF-Model.html

#2
https://docs.ros.org/en/humble/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.html
colcon build --symlink-install --packages-select chair_robot_xacro
ros2 launch chair_robot_xacro robot_display.launch

#3
https://github.com/virusapex/my_robot
colcon build --symlink-install --packages-select robot_bringup robot_description robot_app

ros2 launch robot_bringup diff_drive.launch.py

Для запуска rqt-robot-steering:
rqt --force-discover

#4
colcon build --symlink-install --packages-select chair_circle_move
ros2 launch chair_circle_move circle_movement.launch.py